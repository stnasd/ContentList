{"version":3,"file":"static/js/880.fa12c826.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/clsx/dist/clsx.m.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-virtualized/dist/es/Grid/types.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/types.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/List/types.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/memoize-one/dist/memoize-one.esm.js","../node_modules/react-window/src/timer.js","../node_modules/react-window/src/domHelpers.js","../node_modules/react-window/src/createGridComponent.js","../node_modules/react-window/src/createListComponent.js","../node_modules/react-window/src/FixedSizeList.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import * as React from 'react';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nvar bpfrpt_proptype_CellPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": PropTypes.number.isRequired,\n  \"rowIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isVisible\": PropTypes.bool.isRequired,\n  \"key\": PropTypes.string.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"rowIndex\": PropTypes.number.isRequired,\n  \"style\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.node.isRequired);\nvar bpfrpt_proptype_StyleCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.object.isRequired);\nvar bpfrpt_proptype_CellRangeRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"cellCache\": PropTypes.objectOf(PropTypes.node.isRequired).isRequired,\n  \"cellRenderer\": PropTypes.func.isRequired,\n  \"columnSizeAndPositionManager\": function columnSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === \"function\" ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"columnStartIndex\": PropTypes.number.isRequired,\n  \"columnStopIndex\": PropTypes.number.isRequired,\n  \"deferredMeasurementCache\": PropTypes.object,\n  \"horizontalOffsetAdjustment\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"rowSizeAndPositionManager\": function rowSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === \"function\" ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"rowStartIndex\": PropTypes.number.isRequired,\n  \"rowStopIndex\": PropTypes.number.isRequired,\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired,\n  \"styleCache\": PropTypes.objectOf(PropTypes.object.isRequired).isRequired,\n  \"verticalOffsetAdjustment\": PropTypes.number.isRequired,\n  \"visibleColumnIndices\": PropTypes.object.isRequired,\n  \"visibleRowIndices\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRangeRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSizeGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSize = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOfType([PropTypes.func, PropTypes.number]);\nvar bpfrpt_proptype_NoContentRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": PropTypes.number.isRequired,\n  \"clientWidth\": PropTypes.number.isRequired,\n  \"scrollHeight\": PropTypes.number.isRequired,\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired,\n  \"scrollWidth\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_ScrollbarPresenceChange = process.env.NODE_ENV === 'production' ? null : {\n  \"horizontal\": PropTypes.bool.isRequired,\n  \"vertical\": PropTypes.bool.isRequired,\n  \"size\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_RenderedSection = process.env.NODE_ENV === 'production' ? null : {\n  \"columnOverscanStartIndex\": PropTypes.number.isRequired,\n  \"columnOverscanStopIndex\": PropTypes.number.isRequired,\n  \"columnStartIndex\": PropTypes.number.isRequired,\n  \"columnStopIndex\": PropTypes.number.isRequired,\n  \"rowOverscanStartIndex\": PropTypes.number.isRequired,\n  \"rowOverscanStopIndex\": PropTypes.number.isRequired,\n  \"rowStartIndex\": PropTypes.number.isRequired,\n  \"rowStopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  // One of SCROLL_DIRECTION_HORIZONTAL or SCROLL_DIRECTION_VERTICAL\n  \"direction\": PropTypes.oneOf([\"horizontal\", \"vertical\"]).isRequired,\n  // One of SCROLL_DIRECTION_BACKWARD or SCROLL_DIRECTION_FORWARD\n  \"scrollDirection\": PropTypes.oneOf([-1, 1]).isRequired,\n  // Number of rows or columns in the current axis\n  \"cellCount\": PropTypes.number.isRequired,\n  // Maximum number of cells to over-render in either direction\n  \"overscanCellsCount\": PropTypes.number.isRequired,\n  // Begin of range of visible cells\n  \"startIndex\": PropTypes.number.isRequired,\n  // End of range of visible cells\n  \"stopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": PropTypes.number.isRequired,\n  \"overscanStopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Alignment = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOf([\"auto\", \"end\", \"start\", \"center\"]);\nvar bpfrpt_proptype_VisibleCellRange = process.env.NODE_ENV === 'production' ? null : {\n  \"start\": PropTypes.number,\n  \"stop\": PropTypes.number\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellPosition };\nexport { bpfrpt_proptype_CellRendererParams };\nexport { bpfrpt_proptype_CellRenderer };\nexport { bpfrpt_proptype_CellCache };\nexport { bpfrpt_proptype_StyleCache };\nexport { bpfrpt_proptype_CellRangeRendererParams };\nexport { bpfrpt_proptype_CellRangeRenderer };\nexport { bpfrpt_proptype_CellSizeGetter };\nexport { bpfrpt_proptype_CellSize };\nexport { bpfrpt_proptype_NoContentRenderer };\nexport { bpfrpt_proptype_Scroll };\nexport { bpfrpt_proptype_ScrollbarPresenceChange };\nexport { bpfrpt_proptype_RenderedSection };\nexport { bpfrpt_proptype_OverscanIndicesGetterParams };\nexport { bpfrpt_proptype_OverscanIndices };\nexport { bpfrpt_proptype_OverscanIndicesGetter };\nexport { bpfrpt_proptype_Alignment };\nexport { bpfrpt_proptype_VisibleCellRange };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","var bpfrpt_proptype_Index = process.env.NODE_ENV === 'production' ? null : {\n  \"index\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_PositionInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"x\": PropTypes.number.isRequired,\n  \"y\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_ScrollPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_SizeAndPositionInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"height\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"x\": PropTypes.number.isRequired,\n  \"y\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_SizeInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"height\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_Index };\nexport { bpfrpt_proptype_PositionInfo };\nexport { bpfrpt_proptype_ScrollPosition };\nexport { bpfrpt_proptype_SizeAndPositionInfo };\nexport { bpfrpt_proptype_SizeInfo };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import * as React from 'react';\nvar bpfrpt_proptype_RowRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"index\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isVisible\": PropTypes.bool.isRequired,\n  \"key\": PropTypes.string.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"style\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_RowRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_RenderedRows = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": PropTypes.number.isRequired,\n  \"overscanStopIndex\": PropTypes.number.isRequired,\n  \"startIndex\": PropTypes.number.isRequired,\n  \"stopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": PropTypes.number.isRequired,\n  \"scrollHeight\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_RowRendererParams };\nexport { bpfrpt_proptype_RowRenderer };\nexport { bpfrpt_proptype_RenderedRows };\nexport { bpfrpt_proptype_Scroll };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n","// @flow\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\n\nconst hasNativePerformanceNow =\n  typeof performance === 'object' && typeof performance.now === 'function';\n\nconst now = hasNativePerformanceNow\n  ? () => performance.now()\n  : () => Date.now();\n\nexport type TimeoutID = {|\n  id: AnimationFrameID,\n|};\n\nexport function cancelTimeout(timeoutID: TimeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\n\nexport function requestTimeout(callback: Function, delay: number): TimeoutID {\n  const start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  const timeoutID: TimeoutID = {\n    id: requestAnimationFrame(tick),\n  };\n\n  return timeoutID;\n}\n","// @flow\n\nlet size: number = -1;\n\n// This utility copied from \"dom-helpers\" package.\nexport function getScrollbarSize(recalculate?: boolean = false): number {\n  if (size === -1 || recalculate) {\n    const div = document.createElement('div');\n    const style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n\n    ((document.body: any): HTMLBodyElement).appendChild(div);\n\n    size = div.offsetWidth - div.clientWidth;\n\n    ((document.body: any): HTMLBodyElement).removeChild(div);\n  }\n\n  return size;\n}\n\nexport type RTLOffsetType =\n  | 'negative'\n  | 'positive-descending'\n  | 'positive-ascending';\n\nlet cachedRTLResult: RTLOffsetType | null = null;\n\n// TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\nexport function getRTLOffsetType(recalculate?: boolean = false): RTLOffsetType {\n  if (cachedRTLResult === null || recalculate) {\n    const outerDiv = document.createElement('div');\n    const outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n\n    const innerDiv = document.createElement('div');\n    const innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n\n    outerDiv.appendChild(innerDiv);\n\n    ((document.body: any): HTMLBodyElement).appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    ((document.body: any): HTMLBodyElement).removeChild(outerDiv);\n\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\nimport { getScrollbarSize, getRTLOffsetType } from './domHelpers';\n\nimport type { TimeoutID } from './timer';\n\ntype Direction = 'ltr' | 'rtl';\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n\ntype RenderComponentProps<T> = {|\n  columnIndex: number,\n  data: T,\n  isScrolling?: boolean,\n  rowIndex: number,\n  style: Object,\n|};\nexport type RenderComponent<T> = React$ComponentType<\n  $Shape<RenderComponentProps<T>>\n>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype OnItemsRenderedCallback = ({\n  overscanColumnStartIndex: number,\n  overscanColumnStopIndex: number,\n  overscanRowStartIndex: number,\n  overscanRowStopIndex: number,\n  visibleColumnStartIndex: number,\n  visibleColumnStopIndex: number,\n  visibleRowStartIndex: number,\n  visibleRowStopIndex: number,\n}) => void;\ntype OnScrollCallback = ({\n  horizontalScrollDirection: ScrollDirection,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollUpdateWasRequested: boolean,\n  verticalScrollDirection: ScrollDirection,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [key: string]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  columnCount: number,\n  columnWidth: itemSize,\n  direction: Direction,\n  height: number,\n  initialScrollLeft?: number,\n  initialScrollTop?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  innerTagName?: string, // deprecated\n  itemData: T,\n  itemKey?: (params: {|\n    columnIndex: number,\n    data: T,\n    rowIndex: number,\n  |}) => any,\n  onItemsRendered?: OnItemsRenderedCallback,\n  onScroll?: OnScrollCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  outerTagName?: string, // deprecated\n  overscanColumnCount?: number,\n  overscanColumnsCount?: number, // deprecated\n  overscanCount?: number, // deprecated\n  overscanRowCount?: number,\n  overscanRowsCount?: number, // deprecated\n  rowCount: number,\n  rowHeight: itemSize,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  horizontalScrollDirection: ScrollDirection,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollUpdateWasRequested: boolean,\n  verticalScrollDirection: ScrollDirection,\n|};\n\ntype getItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype getItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype getEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForItemAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any,\n  scrollbarSize: number\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = ({ columnIndex, data, rowIndex }) =>\n  `${rowIndex}:${columnIndex}`;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsOverscanCount = null;\nlet devWarningsOverscanRowsColumnsCount = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount = new WeakSet();\n    devWarningsOverscanRowsColumnsCount = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nexport default function createGridComponent({\n  getColumnOffset,\n  getColumnStartIndexForOffset,\n  getColumnStopIndexForStartIndex,\n  getColumnWidth,\n  getEstimatedTotalHeight,\n  getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment,\n  getOffsetForRowAndAlignment,\n  getRowHeight,\n  getRowOffset,\n  getRowStartIndexForOffset,\n  getRowStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getColumnOffset: getItemOffset,\n  getColumnStartIndexForOffset: GetStartIndexForOffset,\n  getColumnStopIndexForStartIndex: GetStopIndexForStartIndex,\n  getColumnWidth: getItemSize,\n  getEstimatedTotalHeight: getEstimatedTotalSize,\n  getEstimatedTotalWidth: getEstimatedTotalSize,\n  getOffsetForColumnAndAlignment: GetOffsetForItemAndAlignment,\n  getOffsetForRowAndAlignment: GetOffsetForItemAndAlignment,\n  getRowOffset: getItemOffset,\n  getRowHeight: getItemSize,\n  getRowStartIndexForOffset: GetStartIndexForOffset,\n  getRowStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class Grid<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n    _outerRef: ?HTMLDivElement;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      horizontalScrollDirection: 'forward',\n      scrollLeft:\n        typeof this.props.initialScrollLeft === 'number'\n          ? this.props.initialScrollLeft\n          : 0,\n      scrollTop:\n        typeof this.props.initialScrollTop === 'number'\n          ? this.props.initialScrollTop\n          : 0,\n      scrollUpdateWasRequested: false,\n      verticalScrollDirection: 'forward',\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo({\n      scrollLeft,\n      scrollTop,\n    }: {\n      scrollLeft: number,\n      scrollTop: number,\n    }): void {\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(prevState => {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (\n          prevState.scrollLeft === scrollLeft &&\n          prevState.scrollTop === scrollTop\n        ) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection:\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection:\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem({\n      align = 'auto',\n      columnIndex,\n      rowIndex,\n    }: {\n      align: ScrollToAlign,\n      columnIndex?: number,\n      rowIndex?: number,\n    }): void {\n      const { columnCount, height, rowCount, width } = this.props;\n      const { scrollLeft, scrollTop } = this.state;\n      const scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      const estimatedTotalHeight = getEstimatedTotalHeight(\n        this.props,\n        this._instanceProps\n      );\n      const estimatedTotalWidth = getEstimatedTotalWidth(\n        this.props,\n        this._instanceProps\n      );\n\n      // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      const horizontalScrollbarSize =\n        estimatedTotalWidth > width ? scrollbarSize : 0;\n      const verticalScrollbarSize =\n        estimatedTotalHeight > height ? scrollbarSize : 0;\n\n      this.scrollTo({\n        scrollLeft:\n          columnIndex !== undefined\n            ? getOffsetForColumnAndAlignment(\n                this.props,\n                columnIndex,\n                align,\n                scrollLeft,\n                this._instanceProps,\n                verticalScrollbarSize\n              )\n            : scrollLeft,\n        scrollTop:\n          rowIndex !== undefined\n            ? getOffsetForRowAndAlignment(\n                this.props,\n                rowIndex,\n                align,\n                scrollTop,\n                this._instanceProps,\n                horizontalScrollbarSize\n              )\n            : scrollTop,\n      });\n    }\n\n    componentDidMount() {\n      const { initialScrollLeft, initialScrollTop } = this.props;\n\n      if (this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentDidUpdate() {\n      const { direction } = this.props;\n      const { scrollLeft, scrollTop, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n            default:\n              const { clientWidth, scrollWidth } = outerRef;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        columnCount,\n        direction,\n        height,\n        innerRef,\n        innerElementType,\n        innerTagName,\n        itemData,\n        itemKey = defaultItemKey,\n        outerElementType,\n        outerTagName,\n        rowCount,\n        style,\n        useIsScrolling,\n        width,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      const [\n        columnStartIndex,\n        columnStopIndex,\n      ] = this._getHorizontalRangeToRender();\n      const [rowStartIndex, rowStopIndex] = this._getVerticalRangeToRender();\n\n      const items = [];\n      if (columnCount > 0 && rowCount) {\n        for (\n          let rowIndex = rowStartIndex;\n          rowIndex <= rowStopIndex;\n          rowIndex++\n        ) {\n          for (\n            let columnIndex = columnStartIndex;\n            columnIndex <= columnStopIndex;\n            columnIndex++\n          ) {\n            items.push(\n              createElement(children, {\n                columnIndex,\n                data: itemData,\n                isScrolling: useIsScrolling ? isScrolling : undefined,\n                key: itemKey({ columnIndex, data: itemData, rowIndex }),\n                rowIndex,\n                style: this._getItemStyle(rowIndex, columnIndex),\n              })\n            );\n          }\n        }\n      }\n\n      // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n      const estimatedTotalHeight = getEstimatedTotalHeight(\n        this.props,\n        this._instanceProps\n      );\n      const estimatedTotalWidth = getEstimatedTotalWidth(\n        this.props,\n        this._instanceProps\n      );\n\n      return createElement(\n        outerElementType || outerTagName || 'div',\n        {\n          className,\n          onScroll: this._onScroll,\n          ref: this._outerRefSetter,\n          style: {\n            position: 'relative',\n            height,\n            width,\n            overflow: 'auto',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            direction,\n            ...style,\n          },\n        },\n        createElement(innerElementType || innerTagName || 'div', {\n          children: items,\n          ref: innerRef,\n          style: {\n            height: estimatedTotalHeight,\n            pointerEvents: isScrolling ? 'none' : undefined,\n            width: estimatedTotalWidth,\n          },\n        })\n      );\n    }\n\n    _callOnItemsRendered: (\n      overscanColumnStartIndex: number,\n      overscanColumnStopIndex: number,\n      overscanRowStartIndex: number,\n      overscanRowStopIndex: number,\n      visibleColumnStartIndex: number,\n      visibleColumnStopIndex: number,\n      visibleRowStartIndex: number,\n      visibleRowStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanColumnStartIndex: number,\n        overscanColumnStopIndex: number,\n        overscanRowStartIndex: number,\n        overscanRowStopIndex: number,\n        visibleColumnStartIndex: number,\n        visibleColumnStopIndex: number,\n        visibleRowStartIndex: number,\n        visibleRowStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): OnItemsRenderedCallback)({\n          overscanColumnStartIndex,\n          overscanColumnStopIndex,\n          overscanRowStartIndex,\n          overscanRowStopIndex,\n          visibleColumnStartIndex,\n          visibleColumnStopIndex,\n          visibleRowStartIndex,\n          visibleRowStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollLeft: number,\n      scrollTop: number,\n      horizontalScrollDirection: ScrollDirection,\n      verticalScrollDirection: ScrollDirection,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollLeft: number,\n        scrollTop: number,\n        horizontalScrollDirection: ScrollDirection,\n        verticalScrollDirection: ScrollDirection,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): OnScrollCallback)({\n          horizontalScrollDirection,\n          scrollLeft,\n          scrollTop,\n          verticalScrollDirection,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      const { columnCount, onItemsRendered, onScroll, rowCount } = this.props;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          const [\n            overscanColumnStartIndex,\n            overscanColumnStopIndex,\n            visibleColumnStartIndex,\n            visibleColumnStopIndex,\n          ] = this._getHorizontalRangeToRender();\n          const [\n            overscanRowStartIndex,\n            overscanRowStopIndex,\n            visibleRowStartIndex,\n            visibleRowStopIndex,\n          ] = this._getVerticalRangeToRender();\n          this._callOnItemsRendered(\n            overscanColumnStartIndex,\n            overscanColumnStopIndex,\n            overscanRowStartIndex,\n            overscanRowStopIndex,\n            visibleColumnStartIndex,\n            visibleColumnStopIndex,\n            visibleRowStartIndex,\n            visibleRowStopIndex\n          );\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        const {\n          horizontalScrollDirection,\n          scrollLeft,\n          scrollTop,\n          scrollUpdateWasRequested,\n          verticalScrollDirection,\n        } = this.state;\n        this._callOnScroll(\n          scrollLeft,\n          scrollTop,\n          horizontalScrollDirection,\n          verticalScrollDirection,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (rowIndex: number, columnIndex: number) => Object;\n    _getItemStyle = (rowIndex: number, columnIndex: number): Object => {\n      const { columnWidth, direction, rowHeight } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && columnWidth,\n        shouldResetStyleCacheOnItemSizeChange && direction,\n        shouldResetStyleCacheOnItemSizeChange && rowHeight\n      );\n\n      const key = `${rowIndex}:${columnIndex}`;\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(key)) {\n        style = itemStyleCache[key];\n      } else {\n        const offset = getColumnOffset(\n          this.props,\n          columnIndex,\n          this._instanceProps\n        );\n        const isRtl = direction === 'rtl';\n        itemStyleCache[key] = style = {\n          position: 'absolute',\n          left: isRtl ? undefined : offset,\n          right: isRtl ? offset : undefined,\n          top: getRowOffset(this.props, rowIndex, this._instanceProps),\n          height: getRowHeight(this.props, rowIndex, this._instanceProps),\n          width: getColumnWidth(this.props, columnIndex, this._instanceProps),\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getHorizontalRangeToRender(): [number, number, number, number] {\n      const {\n        columnCount,\n        overscanColumnCount,\n        overscanColumnsCount,\n        overscanCount,\n        rowCount,\n      } = this.props;\n      const { horizontalScrollDirection, isScrolling, scrollLeft } = this.state;\n\n      const overscanCountResolved: number =\n        overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getColumnStartIndexForOffset(\n        this.props,\n        scrollLeft,\n        this._instanceProps\n      );\n      const stopIndex = getColumnStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollLeft,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || horizontalScrollDirection === 'backward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n      const overscanForward =\n        !isScrolling || horizontalScrollDirection === 'forward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _getVerticalRangeToRender(): [number, number, number, number] {\n      const {\n        columnCount,\n        overscanCount,\n        overscanRowCount,\n        overscanRowsCount,\n        rowCount,\n      } = this.props;\n      const { isScrolling, verticalScrollDirection, scrollTop } = this.state;\n\n      const overscanCountResolved: number =\n        overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getRowStartIndexForOffset(\n        this.props,\n        scrollTop,\n        this._instanceProps\n      );\n      const stopIndex = getRowStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollTop,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || verticalScrollDirection === 'backward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n      const overscanForward =\n        !isScrolling || verticalScrollDirection === 'forward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _onScroll = (event: ScrollEvent): void => {\n      const {\n        clientHeight,\n        clientWidth,\n        scrollLeft,\n        scrollTop,\n        scrollHeight,\n        scrollWidth,\n      } = event.currentTarget;\n      this.setState(prevState => {\n        if (\n          prevState.scrollLeft === scrollLeft &&\n          prevState.scrollTop === scrollTop\n        ) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        const { direction } = this.props;\n\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n        // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n        let calculatedScrollLeft = scrollLeft;\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              calculatedScrollLeft = -scrollLeft;\n              break;\n            case 'positive-descending':\n              calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        calculatedScrollLeft = Math.max(\n          0,\n          Math.min(calculatedScrollLeft, scrollWidth - clientWidth)\n        );\n        const calculatedScrollTop = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          horizontalScrollDirection:\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: calculatedScrollTop,\n          verticalScrollDirection:\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1);\n      });\n    };\n  };\n}\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    innerTagName,\n    outerTagName,\n    overscanColumnsCount,\n    overscanCount,\n    overscanRowsCount,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn(\n          'The overscanCount prop has been deprecated. ' +\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\n        );\n      }\n    }\n\n    if (\n      typeof overscanColumnsCount === 'number' ||\n      typeof overscanRowsCount === 'number'\n    ) {\n      if (\n        devWarningsOverscanRowsColumnsCount &&\n        !devWarningsOverscanRowsColumnsCount.has(instance)\n      ) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn(\n          'The overscanColumnsCount and overscanRowsCount props have been deprecated. ' +\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\n        );\n      }\n    }\n\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn(\n          'The innerTagName and outerTagName props have been deprecated. ' +\n            'Please use the innerElementType and outerElementType props instead.'\n        );\n      }\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    if (typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Grids must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    }\n\n    if (typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Grids must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\nimport { getScrollbarSize, getRTLOffsetType } from './domHelpers';\n\nimport type { TimeoutID } from './timer';\n\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n// TODO Deprecate directions \"horizontal\" and \"vertical\"\ntype Direction = 'ltr' | 'rtl' | 'horizontal' | 'vertical';\ntype Layout = 'horizontal' | 'vertical';\n\ntype RenderComponentProps<T> = {|\n  data: T,\n  index: number,\n  isScrolling?: boolean,\n  style: Object,\n|};\ntype RenderComponent<T> = React$ComponentType<$Shape<RenderComponentProps<T>>>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype onItemsRenderedCallback = ({\n  overscanStartIndex: number,\n  overscanStopIndex: number,\n  visibleStartIndex: number,\n  visibleStopIndex: number,\n}) => void;\ntype onScrollCallback = ({\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [index: number]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  direction: Direction,\n  height: number | string,\n  initialScrollOffset?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  innerTagName?: string, // deprecated\n  itemCount: number,\n  itemData: T,\n  itemKey?: (index: number, data: T) => any,\n  itemSize: itemSize,\n  layout: Layout,\n  onItemsRendered?: onItemsRenderedCallback,\n  onScroll?: onScrollCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  outerTagName?: string, // deprecated\n  overscanCount: number,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number | string,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n|};\n\ntype GetItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForIndexAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = (index: number, data: any) => index;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsDirection = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nexport default function createListComponent({\n  getItemOffset,\n  getEstimatedTotalSize,\n  getItemSize,\n  getOffsetForIndexAndAlignment,\n  getStartIndexForOffset,\n  getStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getItemOffset: GetItemOffset,\n  getEstimatedTotalSize: GetEstimatedTotalSize,\n  getItemSize: GetItemSize,\n  getOffsetForIndexAndAlignment: GetOffsetForIndexAndAlignment,\n  getStartIndexForOffset: GetStartIndexForOffset,\n  getStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class List<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _outerRef: ?HTMLDivElement;\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      layout: 'vertical',\n      overscanCount: 2,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      scrollDirection: 'forward',\n      scrollOffset:\n        typeof this.props.initialScrollOffset === 'number'\n          ? this.props.initialScrollOffset\n          : 0,\n      scrollUpdateWasRequested: false,\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo(scrollOffset: number): void {\n      scrollOffset = Math.max(0, scrollOffset);\n\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n        return {\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true,\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem(index: number, align: ScrollToAlign = 'auto'): void {\n      const { itemCount, layout } = this.props;\n      const { scrollOffset } = this.state;\n\n      index = Math.max(0, Math.min(index, itemCount - 1));\n\n      // The scrollbar size should be considered when scrolling an item into view, to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      // This is an edge case for lists; normally they only scroll in the dominant direction.\n      let scrollbarSize = 0;\n      if (this._outerRef) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (layout === 'vertical') {\n          scrollbarSize =\n            outerRef.scrollWidth > outerRef.clientWidth\n              ? getScrollbarSize()\n              : 0;\n        } else {\n          scrollbarSize =\n            outerRef.scrollHeight > outerRef.clientHeight\n              ? getScrollbarSize()\n              : 0;\n        }\n      }\n\n      this.scrollTo(\n        getOffsetForIndexAndAlignment(\n          this.props,\n          index,\n          align,\n          scrollOffset,\n          this._instanceProps,\n          scrollbarSize\n        )\n      );\n    }\n\n    componentDidMount() {\n      const { direction, initialScrollOffset, layout } = this.props;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentDidUpdate() {\n      const { direction, layout } = this.props;\n      const { scrollOffset, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n              default:\n                const { clientWidth, scrollWidth } = outerRef;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        direction,\n        height,\n        innerRef,\n        innerElementType,\n        innerTagName,\n        itemCount,\n        itemData,\n        itemKey = defaultItemKey,\n        layout,\n        outerElementType,\n        outerTagName,\n        style,\n        useIsScrolling,\n        width,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      // TODO Deprecate direction \"horizontal\"\n      const isHorizontal =\n        direction === 'horizontal' || layout === 'horizontal';\n\n      const onScroll = isHorizontal\n        ? this._onScrollHorizontal\n        : this._onScrollVertical;\n\n      const [startIndex, stopIndex] = this._getRangeToRender();\n\n      const items = [];\n      if (itemCount > 0) {\n        for (let index = startIndex; index <= stopIndex; index++) {\n          items.push(\n            createElement(children, {\n              data: itemData,\n              key: itemKey(index, itemData),\n              index,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              style: this._getItemStyle(index),\n            })\n          );\n        }\n      }\n\n      // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n      const estimatedTotalSize = getEstimatedTotalSize(\n        this.props,\n        this._instanceProps\n      );\n\n      return createElement(\n        outerElementType || outerTagName || 'div',\n        {\n          className,\n          onScroll,\n          ref: this._outerRefSetter,\n          style: {\n            position: 'relative',\n            height,\n            width,\n            overflow: 'auto',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            direction,\n            ...style,\n          },\n        },\n        createElement(innerElementType || innerTagName || 'div', {\n          children: items,\n          ref: innerRef,\n          style: {\n            height: isHorizontal ? '100%' : estimatedTotalSize,\n            pointerEvents: isScrolling ? 'none' : undefined,\n            width: isHorizontal ? estimatedTotalSize : '100%',\n          },\n        })\n      );\n    }\n\n    _callOnItemsRendered: (\n      overscanStartIndex: number,\n      overscanStopIndex: number,\n      visibleStartIndex: number,\n      visibleStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanStartIndex: number,\n        overscanStopIndex: number,\n        visibleStartIndex: number,\n        visibleStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): onItemsRenderedCallback)({\n          overscanStartIndex,\n          overscanStopIndex,\n          visibleStartIndex,\n          visibleStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollDirection: ScrollDirection,\n      scrollOffset: number,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollDirection: ScrollDirection,\n        scrollOffset: number,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): onScrollCallback)({\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        const { itemCount } = this.props;\n        if (itemCount > 0) {\n          const [\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex,\n          ] = this._getRangeToRender();\n          this._callOnItemsRendered(\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex\n          );\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        const {\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        } = this.state;\n        this._callOnScroll(\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (index: number) => Object;\n    _getItemStyle = (index: number): Object => {\n      const { direction, itemSize, layout } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && itemSize,\n        shouldResetStyleCacheOnItemSizeChange && layout,\n        shouldResetStyleCacheOnItemSizeChange && direction\n      );\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(index)) {\n        style = itemStyleCache[index];\n      } else {\n        const offset = getItemOffset(this.props, index, this._instanceProps);\n        const size = getItemSize(this.props, index, this._instanceProps);\n\n        // TODO Deprecate direction \"horizontal\"\n        const isHorizontal =\n          direction === 'horizontal' || layout === 'horizontal';\n\n        const isRtl = direction === 'rtl';\n        const offsetHorizontal = isHorizontal ? offset : 0;\n        itemStyleCache[index] = style = {\n          position: 'absolute',\n          left: isRtl ? undefined : offsetHorizontal,\n          right: isRtl ? offsetHorizontal : undefined,\n          top: !isHorizontal ? offset : 0,\n          height: !isHorizontal ? size : '100%',\n          width: isHorizontal ? size : '100%',\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getRangeToRender(): [number, number, number, number] {\n      const { itemCount, overscanCount } = this.props;\n      const { isScrolling, scrollDirection, scrollOffset } = this.state;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getStartIndexForOffset(\n        this.props,\n        scrollOffset,\n        this._instanceProps\n      );\n      const stopIndex = getStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollOffset,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || scrollDirection === 'backward'\n          ? Math.max(1, overscanCount)\n          : 1;\n      const overscanForward =\n        !isScrolling || scrollDirection === 'forward'\n          ? Math.max(1, overscanCount)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _onScrollHorizontal = (event: ScrollEvent): void => {\n      const { clientWidth, scrollLeft, scrollWidth } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollLeft) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        const { direction } = this.props;\n\n        let scrollOffset = scrollLeft;\n        if (direction === 'rtl') {\n          // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              scrollOffset = -scrollLeft;\n              break;\n            case 'positive-descending':\n              scrollOffset = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        scrollOffset = Math.max(\n          0,\n          Math.min(scrollOffset, scrollWidth - clientWidth)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _onScrollVertical = (event: ScrollEvent): void => {\n      const { clientHeight, scrollHeight, scrollTop } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollTop) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        const scrollOffset = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1, null);\n      });\n    };\n  };\n}\n\n// NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    layout,\n    innerTagName,\n    outerTagName,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn(\n          'The innerTagName and outerTagName props have been deprecated. ' +\n            'Please use the innerElementType and outerElementType props instead.'\n        );\n      }\n    }\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn(\n            'The direction prop should be either \"ltr\" (default) or \"rtl\". ' +\n              'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.'\n          );\n        }\n        break;\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"layout\" prop has been specified. ' +\n            'Value should be either \"horizontal\" or \"vertical\". ' +\n            `\"${layout}\" was specified.`\n        );\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Horizontal lists must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Vertical lists must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","// @flow\n\nimport createListComponent from './createListComponent';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\ntype InstanceProps = any;\n\nconst FixedSizeList = createListComponent({\n  getItemOffset: ({ itemSize }: Props<any>, index: number): number =>\n    index * ((itemSize: any): number),\n\n  getItemSize: ({ itemSize }: Props<any>, index: number): number =>\n    ((itemSize: any): number),\n\n  getEstimatedTotalSize: ({ itemCount, itemSize }: Props<any>) =>\n    ((itemSize: any): number) * itemCount,\n\n  getOffsetForIndexAndAlignment: (\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number,\n    instanceProps: InstanceProps,\n    scrollbarSize: number\n  ): number => {\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const lastItemOffset = Math.max(\n      0,\n      itemCount * ((itemSize: any): number) - size\n    );\n    const maxOffset = Math.min(\n      lastItemOffset,\n      index * ((itemSize: any): number)\n    );\n    const minOffset = Math.max(\n      0,\n      index * ((itemSize: any): number) -\n        size +\n        ((itemSize: any): number) +\n        scrollbarSize\n    );\n\n    if (align === 'smart') {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center': {\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        const middleOffset = Math.round(\n          minOffset + (maxOffset - minOffset) / 2\n        );\n        if (middleOffset < Math.ceil(size / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n          return lastItemOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n      }\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    { itemCount, itemSize }: Props<any>,\n    offset: number\n  ): number =>\n    Math.max(\n      0,\n      Math.min(itemCount - 1, Math.floor(offset / ((itemSize: any): number)))\n    ),\n\n  getStopIndexForStartIndex: (\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\n    startIndex: number,\n    scrollOffset: number\n  ): number => {\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const offset = startIndex * ((itemSize: any): number);\n    const size = (((isHorizontal ? width : height): any): number);\n    const numVisibleItems = Math.ceil(\n      (size + scrollOffset - offset) / ((itemSize: any): number)\n    );\n    return Math.max(\n      0,\n      Math.min(\n        itemCount - 1,\n        startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n      )\n    );\n  },\n\n  initInstanceProps(props: Props<any>): any {\n    // Noop\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: true,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error(\n          'An invalid \"itemSize\" prop has been specified. ' +\n            'Value should be a number. ' +\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default FixedSizeList;\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}"],"names":["instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","toPropertyKey","key","protoProps","staticProps","prototype","_possibleConstructorReturn","self","call","assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","constructor","value","componentWillMount","state","this","getDerivedStateFromProps","undefined","setState","componentWillReceiveProps","nextProps","prevState","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","name","newApiName","componentDidUpdate","maybeSnapshot","snapshot","__suppressDeprecationWarning","r","e","t","f","n","Array","isArray","arguments","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","_objectWithoutProperties","source","excluded","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","_ref2","_lastMeasuredIndex","index","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","size","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","cachedIndices","callback","indices","allInitialized","every","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","document","createElement","win","scrollbarSize","recalc","canUseDOM","scrollDiv","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","_class","_temp","request","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread","forEach","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_assertThisInitialized","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","className","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","React","_extends","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","scrollHeight","scrollWidth","hasOwnProperty","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","createDetectElementResize","nonce","hostWindow","_window","attachEvent","global","requestFrame","fn","cancelFrame","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","offsetHeight","scrollListener","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","removeResizeListener","detachEvent","splice","removeEventListener","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","_arrayLikeToArray","arr","len","arr2","_unsupportedIterableToArray","minLen","slice","from","test","_toConsumableArray","iter","Symbol","iterator","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","_slicedToArray","l","u","a","next","done","accessibilityOverscanIndicesGetter","ge","c","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","hi","cb","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","IntervalTree","root","result","insert","weight","bounds","remove","queryPoint","queryInterval","tproto","get","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","keyMapper","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","ASC","DESC","SortIndicator","sortDirection","SortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","minWidth","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getScrollOffset","documentElement","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","container","containerElement","elementRect","containerRect","_elementRect","_containerRect","getPositionOffset","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll","_inheritsLoose","safeIsNaN","Number","areInputsEqual","newInputs","lastInputs","first","second","resultFn","isEqual","lastThis","lastResult","lastArgs","calledOnce","newArgs","_i","performance","cancelTimeout","timeoutID","requestTimeout","tick","recalculate","div","cachedRTLResult","getRTLOffsetType","outerDiv","innerDiv","innerStyle","defaultItemKey$1","createListComponent","getItemOffset","getEstimatedTotalSize","getItemSize","getOffsetForIndexAndAlignment","getStartIndexForOffset","getStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","_PureComponent","_instanceProps","_outerRef","_resetIsScrollingTimeoutId","initialScrollOffset","scrollUpdateWasRequested","_callOnItemsRendered","memoizeOne","visibleStartIndex","visibleStopIndex","onItemsRendered","_callOnScroll","_getItemStyle","itemSize","layout","itemStyleCache","_getItemStyleCache","_offset","isHorizontal","isRtl","offsetHorizontal","_","__","___","_onScrollHorizontal","_event$currentTarget","_resetIsScrollingDebounced","_onScrollVertical","_event$currentTarget2","_outerRefSetter","outerRef","current","_resetIsScrolling","validateSharedProps$1","_proto","scrollToItem","itemCount","componentDidMount","_callPropsCallbacks","componentWillUnmount","render","innerRef","innerElementType","innerTagName","itemData","_this$props5$itemKey","itemKey","outerElementType","outerTagName","useIsScrolling","_this$_getRangeToRend","_getRangeToRender","items","estimatedTotalSize","_this$_getRangeToRend2","_overscanStartIndex","_overscanStopIndex","_visibleStartIndex","_visibleStopIndex","_scrollDirection","_scrollOffset","_scrollUpdateWasRequested","overscanCount","overscanBackward","overscanForward","PureComponent","defaultProps","FixedSizeList","lastItemOffset","middleOffset","numVisibleItems","ReferenceError","_setPrototypeOf"],"sourceRoot":""}